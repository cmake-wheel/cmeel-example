name: Release on GitHub & PyPI

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CMEEL_LOG_LEVEL: DEBUG

jobs:
  wheel:
    name: "Build ${{ matrix.python }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-14"]
        python: ["cp38", "cp39", "cp310", "cp311", "cp312", "cp313"]
        exclude:
          - os: "macos-14"
            python: "cp38"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - run: pipx install cibuildwheel
      - run: cibuildwheel --output-dir wh
        env:
          CIBW_BUILD: "${{ matrix.python }}-*"
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux_2_28_x86_64"
          CIBW_MANYLINUX_AARCH64_IMAGE: "quay.io/pypa/manylinux_2_28_aarch64"
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CIBW_ENVIRONMENT: CMEEL_LOG_LEVEL="DEBUG"
      - uses: actions/upload-artifact@v4
        with:
          name: "artifact-${{ matrix.os }}-${{ matrix.python }}"
          path: wh/cmeel_example*

  sdist:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: setup
        run: |
          python -m pip install -U pip
          python -m pip install build cmeel[build]
      - name: build sdist
        run: python -m build -nso dist .
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist

  index:
    needs: ["wheel", "sdist"]
    runs-on: "ubuntu-24.04"
    steps:
      - uses: actions/download-artifact@v4
      - run: mkdir dist && mv artifact-*/* dist
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: index
        run: |
          python -m pip install -U pip
          python -m pip install wheel simple503
          python -m simple503 --base-url ${{ github.workspace }}/dist ${{ github.workspace }}/dist
      - run: echo "${{ github.workspace }}/dist"
      - run: tree "${{ github.workspace }}/dist"
      - run: cat dist/index.html
      - run: cat dist/cmeel-example/index.html
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test:
    needs: ["index"]
    name: "Test ${{ matrix.python }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-14"]
        python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - os: "macos-14"
            python: "3.8"
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - run: ls
      - run: echo "${{ github.workspace }}/dist"
      - run: ls "${{ github.workspace }}/dist"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: install wheel
        run: python -m pip install -i "file://${{ github.workspace }}/dist" --extra-index-url https://pypi.org/simple cmeel-example
      - name: test binary
        run: cmeel-add 3 4
      - name: test module
        run: python -c "import cmeel_example; assert cmeel_example.cmeel_add(3, 4) == 7"
        env:
          PYTHONWARNINGS: error

  release:
    needs: ["test"]
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - run: curl https://github.com/nim65s.gpg | gpg --import
      - name: validate signature
        run: >
          git verify-tag --raw ${{ github.ref_name }} 2>&1
          | grep -q 'VALIDSIG 9B1A79065D2F2B806C8A5A1C7D2ACDAF4653CF28'
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - run: echo "TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - run: gh release create -t "Release ${{ env.TAG}}" -n "$(awk '/## \[${{ env.TAG }}] - /{flag=1;next}/## \[/{flag=0}flag' CHANGELOG.md)" ${{ env.TAG }} dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
